import io

def read_file_indirectly(filepath):
    """
    Reads a file using open() indirectly (through a wrapper).

    Args:
        filepath (str): The path to the file.
    """
    try:
        def _open(file_path, mode='r'): #wrapper function
            return open(file_path, mode)

        file = _open(filepath, 'r') #using the wrapper.
        with file: #using the file object returned from the wrapper.
            for line in file:
                print(line, end='')

    except FileNotFoundError:
        print(f"Error: File not found at '{filepath}'")
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage:
def create_test_file(filepath, content):
    with open(filepath, 'w') as f:
        f.write(content)

test_file_path = "my_file.txt"
test_file_content = "Line 1\nLine 2\nLine 3"
create_test_file(test_file_path, test_file_content)

read_file_indirectly(test_file_path)

# Example of a file that does not exist.
# read_file_indirectly("does_not_exist.txt")