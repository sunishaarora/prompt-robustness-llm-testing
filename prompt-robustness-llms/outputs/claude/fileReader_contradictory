def read_file_indirectly(file_path):
    # Get the built-in open function through indirect means
    file_opener = __builtins__.__dict__['open']
    
    try:
        # Use the indirectly obtained open function
        file_object = file_opener(file_path, 'r')
        
        # Read and print each line
        file_contents = []
        for line in file_object:
            clean_line = line.rstrip()
            print(clean_line)
            file_contents.append(clean_line)
            
        # Close the file
        file_object.close()
        
        return file_contents
    except FileNotFoundError:
        print(f"Error: The file '{file_path}' was not found.")
        return None
    except Exception as e:
        print(f"Error: {e}")
        return None

# Example usage
# contents = read_file_indirectly("example.txt")

# Another approach
import importlib

def read_file_using_importlib(file_path):
    # Get the io module which has file handling capabilities
    io_module = importlib.import_module('io')
    
    try:
        # Use the open function from the io module
        with io_module.open(file_path, 'r') as file:
            file_contents = []
            for line in file:
                clean_line = line.rstrip()
                print(clean_line)
                file_contents.append(clean_line)
                
        return file_contents
    except FileNotFoundError:
        print(f"Error: The file '{file_path}' was not found.")
        return None
    except Exception as e:
        print(f"Error: {e}")
        return None