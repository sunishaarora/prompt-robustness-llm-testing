class BankAccount:
    """
    A class representing a bank account.
    """

    def __init__(self, account_number, initial_balance=0):
        """
        Initializes a new BankAccount object.

        Args:
            account_number (str): The account number.
            initial_balance (float, optional): The initial balance. Defaults to 0.
        """
        self.account_number = account_number
        self.balance = initial_balance

    def deposit(self, amount):
        """
        Deposits the given amount into the account.

        Args:
            amount (float): The amount to deposit.

        Raises:
            ValueError: If the amount is negative.
        """
        if amount < 0:
            raise ValueError("Deposit amount must be positive.")
        self.balance += amount
        print(f"Deposited ${amount:.2f}. New balance: ${self.balance:.2f}")

    def withdraw(self, amount):
        """
        Withdraws the given amount from the account.

        Args:
            amount (float): The amount to withdraw.

        Raises:
            ValueError: If the amount is negative.
            ValueError: If the withdrawal amount exceeds the balance.
        """
        if amount < 0:
            raise ValueError("Withdrawal amount must be positive.")
        if amount > self.balance:
            raise ValueError("Insufficient funds.")
        self.balance -= amount
        print(f"Withdrawn ${amount:.2f}. New balance: ${self.balance:.2f}")

    def get_balance(self):
        """
        Returns the current balance of the account.

        Returns:
            float: The current balance.
        """
        return self.balance

    def __str__(self):
        """
        Returns a string representation of the BankAccount object.

        Returns:
            str: A string representation of the BankAccount object.
        """
        return f"Account Number: {self.account_number}, Balance: ${self.balance:.2f}"

# Example usage:
try:
    account = BankAccount("123456789", 1000)
    print(account)

    account.deposit(500)
    account.withdraw(200)
    account.withdraw(1500) #should raise exception
except ValueError as e:
    print(f"Error: {e}")

try:
    account.deposit(-100)
except ValueError as e:
    print(f"Error: {e}")