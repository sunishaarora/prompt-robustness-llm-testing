def sort_both_ways(arr):
    """
    Sorts a list using both Python's built-in sort() and selection sort.

    Args:
      arr: A list of comparable elements.

    Returns:
      A tuple containing two lists: the built-in sorted list and the selection sorted list.
    """
    arr_copy_sort = arr[:]
    arr_copy_selection = arr[:]

    # Using Python's built-in sort()
    arr_copy_sort.sort()

    # Using selection sort
    n = len(arr_copy_selection)
    for i in range(n):
        min_index = i
        for j in range(i + 1, n):
            if arr_copy_selection[j] < arr_copy_selection[min_index]:
                min_index = j
        arr_copy_selection[i], arr_copy_selection[min_index] = arr_copy_selection[min_index], arr_copy_selection[i]

    return arr_copy_sort, arr_copy_selection

# Example Usage
my_list = [64, 25, 12, 22, 11]
sorted_built_in, sorted_selection = sort_both_ways(my_list)

print("Sorted using built-in sort:", sorted_built_in)
print("Sorted using selection sort:", sorted_selection)

my_list2 = [1,2,3,4,5]
sorted_built_in2, sorted_selection2 = sort_both_ways(my_list2)

print("Sorted using built-in sort:", sorted_built_in2)
print("Sorted using selection sort:", sorted_selection2)

my_list3 = [5,4,3,2,1]
sorted_built_in3, sorted_selection3 = sort_both_ways(my_list3)

print("Sorted using built-in sort:", sorted_built_in3)
print("Sorted using selection sort:", sorted_selection3)