import unittest
from math import factorial as math_factorial

# Assuming you have a factorial function defined like this:
def factorial(n):
    """
    Calculate the factorial of a number.
    
    Args:
        n (int): A non-negative integer
        
    Returns:
        int: The factorial of n
        
    Raises:
        ValueError: If n is negative
        TypeError: If n is not an integer
    """
    if not isinstance(n, int):
        raise TypeError("Input must be an integer")
    if n < 0:
        raise ValueError("Input must be non-negative")
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)


class TestFactorial(unittest.TestCase):
    
    def test_zero(self):
        """Test factorial of 0"""
        self.assertEqual(factorial(0), 1)
    
    def test_one(self):
        """Test factorial of 1"""
        self.assertEqual(factorial(1), 1)
    
    def test_positive_integers(self):
        """Test factorial of various positive integers"""
        self.assertEqual(factorial(2), 2)
        self.assertEqual(factorial(3), 6)
        self.assertEqual(factorial(5), 120)
        self.assertEqual(factorial(10), 3628800)
    
    def test_large_number(self):
        """Test factorial of a larger number against math.factorial"""
        self.assertEqual(factorial(20), math_factorial(20))
    
    def test_negative_input(self):
        """Test that negative inputs raise ValueError"""
        with self.assertRaises(ValueError):
            factorial(-1)
        with self.assertRaises(ValueError):
            factorial(-5)
    
    def test_non_integer_input(self):
        """Test that non-integer inputs raise TypeError"""
        with self.assertRaises(TypeError):
            factorial(5.5)
        with self.assertRaises(TypeError):
            factorial("5")
        with self.assertRaises(TypeError):
            factorial([5])


if __name__ == "__main__":
    unittest.main()