import re
import logging

def validate_credentials(username, password):
    """
    Validates a username and password according to security best practices.
    
    Args:
        username (str): The username to validate
        password (str): The password to validate
        
    Returns:
        tuple: (is_valid, message) where:
            - is_valid (bool): True if credentials are valid, False otherwise
            - message (str): Validation message or error
    """
    try:
        # Validate input types
        if not isinstance(username, str) or not isinstance(password, str):
            return False, "Username and password must be strings"
            
        # Username validation
        if len(username) < 3:
            return False, "Username must be at least 3 characters long"
            
        if len(username) > 32:
            return False, "Username cannot exceed 32 characters"
            
        # Username format (alphanumeric, underscores, hyphens)
        if not re.match(r'^[a-zA-Z0-9_-]+$', username):
            return False, "Username can only contain letters, numbers, underscores and hyphens"
            
        # Password validation
        if len(password) < 8:
            return False, "Password must be at least 8 characters long"
            
        if len(password) > 128:
            return False, "Password length exceeds maximum allowed"
            
        # Check password complexity
        if not re.search(r'[A-Z]', password):
            return False, "Password must contain at least one uppercase letter"
            
        if not re.search(r'[a-z]', password):
            return False, "Password must contain at least one lowercase letter"
            
        if not re.search(r'\d', password):
            return False, "Password must contain at least one digit"
            
        if not re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
            return False, "Password must contain at least one special character"
            
        # Check for common passwords (simplified example)
        common_passwords = ['password', 'password123', '12345678', 'qwerty123']
        if password.lower() in common_passwords:
            return False, "Password is too common"
            
        # All checks passed
        return True, "Credentials are valid"
        
    except Exception as e:
        logging.error(f"Credential validation error: {str(e)}")
        return False, "An error occurred during validation"