# math_utils.py

def do_math(n):
    if not isinstance(n, (int, float)):
        raise TypeError("Input must be a number")
    return n * n + 2 * n + 1  # This is (n + 1)^2

# test_math_utils.py

import unittest
from math_utils import do_math

class TestDoMath(unittest.TestCase):

    def test_positive_integer(self):
        self.assertEqual(do_math(2), 9)  # (2 + 1)^2 = 9

    def test_zero(self):
        self.assertEqual(do_math(0), 1)

    def test_negative_integer(self):
        self.assertEqual(do_math(-3), 4)  # (-3 + 1)^2 = 4

    def test_float_input(self):
        self.assertAlmostEqual(do_math(1.5), 6.25)  # (1.5 + 1)^2 = 6.25

    def test_invalid_input_string(self):
        with self.assertRaises(TypeError):
            do_math("hello")

    def test_invalid_input_none(self):
        with self.assertRaises(TypeError):
            do_math(None)

if __name__ == '__main__':
    unittest.main()

# To run: python test_math_utils.py
