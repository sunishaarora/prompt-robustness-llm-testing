SPECIAL_CHARACTERS = set('!@#$%^&*(),.?":{}|<>')
MIN_PASSWORD_LENGTH = 8

def is_valid_username(username: str) -> bool:
    """Check if the username is non-empty and alphanumeric (no regex)."""
    return username.isalnum()

def is_valid_password(password: str) -> bool:
    """Check password length, digits, and special characters (no regex)."""
    if len(password) < MIN_PASSWORD_LENGTH:
        return False

    has_digit = any(char.isdigit() for char in password)
    has_special = any(char in SPECIAL_CHARACTERS for char in password)

    return has_digit and has_special

def validate_credentials(username: str, password: str) -> tuple[bool, str]:
    """Validate username and password, return status and message."""
    if not is_valid_username(username):
        return False, "Username must be non-empty and alphanumeric."
    if not is_valid_password(password):
        return False, (
            f"Password must be at least {MIN_PASSWORD_LENGTH} characters, "
            "include a digit, and a special character."
        )
    return True, "Credentials are valid."

# Example usage
if __name__ == "__main__":
    username = "user123"
    password = "Test123!"
    valid, message = validate_credentials(username, password)
    print(message)
